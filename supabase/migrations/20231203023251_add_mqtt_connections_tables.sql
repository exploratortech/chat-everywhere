create table "public"."mqtt_connections" (
    "id" bigint generated by default as identity not null,
    "uuid" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "topic" text not null,
    "payload" text not null,
    "description" text not null,
    "name" text not null
);

alter table "public"."mqtt_connections" enable row level security;

CREATE UNIQUE INDEX mqtt_connections_pkey ON public.mqtt_connections USING btree (id);

alter table "public"."mqtt_connections" add constraint "mqtt_connections_pkey" PRIMARY KEY using index "mqtt_connections_pkey";

alter table "public"."mqtt_connections" add constraint "mqtt_connections_uuid_fkey" FOREIGN KEY (uuid) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."mqtt_connections" validate constraint "mqtt_connections_uuid_fkey";

create policy "Enable access for users' records"
on "public"."mqtt_connections"
as permissive
for all
to public
using ((auth.uid() = uuid))
with check ((auth.uid() = uuid));